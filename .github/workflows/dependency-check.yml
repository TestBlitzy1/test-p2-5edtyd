name: Dependency Check

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday
  push:
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'
  pull_request:
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'

env:
  NODE_VERSION: '18.x'

jobs:
  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['src/backend', 'src/web']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Setup Snyk
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: Run Snyk security scan
        working-directory: ${{ matrix.project }}
        run: snyk test --all-projects --severity-threshold=high
        continue-on-error: true

      - name: Generate SARIF report
        working-directory: ${{ matrix.project }}
        run: snyk test --all-projects --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ matrix.project }}/snyk.sarif
          category: Snyk

  update_check:
    name: Update Check
    needs: security_scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['src/backend', 'src/web']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: Check for updates
        working-directory: ${{ matrix.project }}
        id: check
        run: |
          OUTDATED=$(npm outdated --json || true)
          echo "OUTDATED_DEPS=$OUTDATED" >> $GITHUB_ENV

      - name: Create Pull Request for updates
        if: env.OUTDATED_DEPS != '{}'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update dependencies in ${{ matrix.project }}"
          title: "chore(deps): update dependencies in ${{ matrix.project }}"
          body: |
            Automated dependency updates for ${{ matrix.project }}
            
            Updates found:
            ```json
            ${{ env.OUTDATED_DEPS }}
            ```
            
            Generated by dependency check workflow
          branch: "deps/update-${{ matrix.project }}"
          base: main
          labels: dependencies,automated pr